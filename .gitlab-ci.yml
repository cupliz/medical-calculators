image: docker:latest

stages:
  - deploy
  - test

services:
  - docker:dind

variables:
  DOCKER_DRIVER: overlay2

Build and deploy staging:
  stage: deploy
  image: python:3.6-stretch

  before_script:
    - pip install awscli
    - curl -sL https://deb.nodesource.com/setup_9.x | bash -
    - apt-get install -y nodejs jq
    - npm install

  script:
    - npm run build

    - aws s3 sync ./build s3://$S3_BUCKET_NAME/ --delete --acl public-read
    - export DISTRIBUTION_ID=$(aws cloudfront list-distributions | jq -r '.DistributionList.Items[] | select(.Aliases.Items[] | contains("${WEBSITE_FQDN}")) | .Id')
    - aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths /index.html

    - aws s3 cp src/data/list.json s3://$S3_BUCKET_NAME/calculators-list.json --acl private

  environment:
    name: staging
    url: http://${WEBSITE_FQDN}

  artifacts:
    paths:
      - build/

  only:
    - staging
  when: on_success

Test staging deployment:
  stage: test
  image: alpine:3.6

  dependencies:
    - Build and deploy staging

  before_script:
    - apk add --no-cache curl grep

  script:
    - cd build
    - echo "WEBSITE_FQDN is ${WEBSITE_FQDN}"
    - find static/js -name 'main.*.js' -exec curl "${WEBSITE_FQDN}{}" -o _main.js \;
    - cat static/js/main.*.js | sha512sum > _main.sha512
    - cat _main.js | sha512sum -c _main.sha512

  environment: staging

  only:
    - staging
